# Entity state scenes and scenarios for living room
# FIXME merita una directory dedicata

binary_sensor:

  - platform: template
    sensors:
      # Bisogno di luce in soggiorno
      living_need_light:
        value_template: >-
          {{ states.sensor.lux_living.state|int < 10 or is_state('sun.sun', 'below_horizon') }}


input_number:

  people_count_living:
    name: 'Persone in soggiorno'
    initial: 0
    min: 0
    # counting known people only for now
    max: 1
    step: 1

input_boolean:

  need_living_utility_light:
    name: 'Ho bisogno di una luce minima in soggiorno'
    initial: false
    icon: mdi:lighthouse-on

scene:

  - name: dinner_watching
    entities:
      light.living_extra: on
      light.living_main: off
      light.dayway: on

  - name: cinema_mode
    entities:
      light.living_extra: off
      light.living_main: off

  # Luci guida notturne
  - name: living_night_guidance_on
    entities:
      light.living_ceiling:
        state: on
        brightness: 40
        color_temp: 400

  - name: living_night_guidance_off
    entities:
      light.living_ceiling:
        state: off

automation:

  - alias: need_utility_light_toggle_tag
    trigger:
      - trigger: tag
        tag_id: 573fa973-7041-4431-a3ef-541f37fffe34
    action:
      - action: input_boolean.toggle
        entity_id: input_boolean.need_living_utility_light
      # TODO maybe say something?

  - alias: need_utility_light_on
    trigger:
      - trigger: state
        entity_id: input_boolean.need_living_utility_light
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.living_need_light
        state: 'on'
    action:
      - action: light.turn_on
        entity_id: light.living_extra

  - alias: need_utility_light_off
    trigger:
      - trigger: state
        entity_id: input_boolean.need_living_utility_light
        to: 'off'
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: 'media_player.kodi'
          state: idle
        - condition: state
          entity_id: binary_sensor.cinema_mode
          state: 'on'
    action:
      - action: light.turn_off
        entity_id: light.living_extra

  - alias: dinner_watching
    trigger:
      - trigger: state
        entity_id: 'media_player.kodi'
        to: 'playing'
      - trigger: template
        value_template: "{{ is_state_attr('media_player.tv', 'media_content_type', 'channel') }}"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.living_need_light
          state: 'on'
        - condition: state
          entity_id: input_boolean.need_living_utility_light
          state: 'on'
        - condition: state
          entity_id: binary_sensor.cinema_mode
          state: 'on'
    action:
      - action: scene.turn_on
        entity_id: scene.dinner_watching

  - alias: cinema_mode
    trigger:
      - trigger: state
        entity_id: 'media_player.kodi'
        to: 'playing'
      - trigger: template
        value_template: >-
          {{ is_state('media_player.tv', 'on') and is_state_attr('media_player.tv', 'media_content_type', 'channel') }}
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.need_living_utility_light
          state: 'off'
        - condition: state
          entity_id: binary_sensor.cinema_mode
          state: 'on'
        # Evitiamo di spegnere tutto se siamo appena rientrati
        - condition: state
          entity_id: input_boolean.house_entrance_lights
          state: 'off'
    action:
      - action: scene.turn_on
        entity_id: scene.cinema_mode

  - alias: media_paused
    description: 'Accendi luce utility se mettiamo in pausa un video'
    trigger:
      - trigger: state
        entity_id: 'media_player.kodi'
        from: 'playing'
        to: 'paused'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.living_need_light
          state: 'on'
        - condition: template
          value_template: '{{ states.media_player.kodi.attributes.media_content_type in ["movie","tvshow","video"] }}'
    action:
      - action: light.turn_on
        entity_id: light.living_ceiling

  - alias: media_stopped
    description: Accendi luce utility se fermiamo Kodi
    trigger:
      - trigger: state
        entity_id: 'media_player.kodi'
        to: 'idle'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.living_need_light
          state: 'on'
        # Solo se stavo riproducendo video prima
        - condition: template
          value_template: '{{ states.input_select.kodi_last_media.state in ["movie","tvshow","video"] }}'
        # Solo se non siamo in modalità notte (spegnimento kodi causa night mode)
        - condition: template
          value_template: "{{ not is_state('input_select.house_mode', 'night') }}"
    action:
      - action: light.turn_on
        entity_id: light.living_ceiling

  - alias: house_mode_living_guest
    trigger:
      - trigger: state
        entity_id: input_select.house_mode
        to: guest
    action:
      - delay:
          seconds: 5
      - action: media_player.clear_playlist
        entity_id: media_player.music
      # for Kodi
      #- action: media_player.play_media
      #  data:
      #    entity_id: media_player.music
      #    media_content_id: !secret guest_mode_playlist
      #    media_content_type: music
      # for Mopidy/MPD
      - action: media_player.select_source
        data:
          entity_id: media_player.music
          source: !secret guest_mode_playlist
      # TODO we need a scenario here to set the various speakers
      - action: media_player.volume_set
        data:
          entity_id: media_player.music
          volume_level: !secret guest_mode_volume

  - alias: house_mode_living_not_guest
    trigger:
      - trigger: state
        entity_id: input_select.house_mode
        from: guest
    action:
      - action: media_player.media_stop
        entity_id: media_player.music
      - action: media_player.volume_set
        data:
          entity_id: media_player.music
          volume_level: !secret no_guest_mode_volume

  - alias: living_too_much_light
    description: 'Troppa luce in soggiorno: spegni le luci extra'
    trigger:
      - trigger: numeric_state
        entity_id: sensor.lux_living
        above: !secret living_lux_too_much_threshold
    action:
      - action: light.turn_off
        entity_id: light.living_extra

  - alias: house_mode_living_night
    trigger:
      trigger: state
      entity_id: input_select.house_mode
      to: night
    action:
      - action: input_boolean.turn_off
        entity_id: input_boolean.need_living_utility_light
      - action: media_player.turn_off
        entity_id: media_player.kodi
      # Questo potrebbe fallire quindi lo mettiamo per ultimo
      - action: media_player.turn_off
        entity_id: media_player.tv

  - alias: house_mode_living_away
    trigger:
      trigger: state
      entity_id: input_select.house_mode
      to: away
    action:
      # Azzera il conteggio persone (evita falsi positivi)
      - action: input_number.set_value
        data:
          entity_id: input_number.people_count_living
          value: '0'
      - action: input_boolean.turn_off
        entity_id: input_boolean.need_living_utility_light
      - action: media_player.turn_off
        entity_id:
          - media_player.kodi
          - media_player.music
          - media_player.tv

  - alias: living_motion_night
    description: Accendi una lieve luce notturna in caso di movimento in soggiorno
    trigger:
      - trigger: state
        entity_id: group.motion_living
        to: 'on'
      - trigger: numeric_state
        entity_id: sensor.lux_living
        below: !secret living_lux_darkness_threshold
    condition:
      condition: and
      conditions:
        # Modalità cinema off
        - condition: state
          entity_id: binary_sensor.cinema_mode
          state: 'off'
        - condition: state
          entity_id: binary_sensor.cinema_paused_mode
          state: 'off'
        # TV spenta (rafforzativo del cinema mode causa instabilità API Philips)
        # FIXME API Philips non funziona
        #- condition: state
        #  entity_id: media_player.tv
        #  state: 'off'
        # Non mi serve luce utility soggiorno
        - condition: state
          entity_id: input_boolean.need_living_utility_light
          state: 'off'
        # Luce utility spenta
        - condition: state
          entity_id: light.living_extra
          state: 'off'
        # Assicuriamoci che le condizioni del trigger siano tutte rispettate
        - condition: state
          entity_id: group.motion_living
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.lux_living
          below: !secret living_lux_darkness_threshold
    action:
      - action: scene.turn_on
        entity_id: scene.living_night_guidance_on

  - alias: living_motion_night_end
    description: Spegni la luce notturna quando il movimento in soggiorno è cessato
    trigger:
      - trigger: state
        entity_id: group.motion_living
        to: 'off'
      - trigger: state
        entity_id: binary_sensor.activity_notebook_daniele
        to: 'off'
    condition:
      condition: and
      conditions:
        # Modalità cinema off
        - condition: state
          entity_id: binary_sensor.cinema_mode
          state: 'off'
        - condition: state
          entity_id: binary_sensor.cinema_paused_mode
          state: 'off'
        # TV spenta (rafforzativo del cinema mode causa instabilità API Philips)
        - condition: state
          entity_id: media_player.tv
          state: 'off'
        # Non mi serve luce utility soggiorno
        - condition: state
          entity_id: input_boolean.need_living_utility_light
          state: 'off'
        # Movimento in soggiorno assente
        - condition: state
          entity_id: group.motion_living
          state: 'off'
        # Notebook spento o idle
        - condition: state
          entity_id: binary_sensor.activity_notebook_daniele
          state: 'off'
    action:
      - action: scene.turn_on
        entity_id: scene.living_night_guidance_off
