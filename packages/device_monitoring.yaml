# ### Device presence and battery monitoring
# TODO allarmi per sensori che spariscono, data una lista di sensori noti

sensor:
  - platform: template
    sensors:
      # Device con batteria scarica
      low_batteries:
        friendly_name: Batterie scariche
        value_template: >
          {%- set threshold = 10 -%}
          {%- set result = namespace(count=0) -%}
          {%- for item in states['sensor'] if ((item.entity_id.startswith('sensor.battery_') or item.entity_id == 'sensor.controlcenter_battery_level') and item.state not in ('unknown', 'unavailable') and item.state | int < threshold) -%}
          {%- set result.count = result.count + 1 -%}
          {%- endfor -%}
          {{ result.count }}
        attribute_templates:
          devices: >
            {%- set threshold = 10 -%}
            {%- set result = namespace(items=[]) -%}
            {%- for item in states['sensor'] if ((item.entity_id.startswith('sensor.battery_') or item.entity_id == 'sensor.controlcenter_battery_level') and item.state not in ('unknown', 'unavailable') and item.state | int < threshold) -%}
            {% set result.items = result.items + [item.entity_id] %}
            {%- endfor -%}
            {{ result.items }}

      # Sensori di temperatura bloccati
      temperature_sensors_stuck:
        friendly_name: Sensori di temperatura bloccati
        value_template: >
          {%- set threshold = 24 -%}
          {%- set result = namespace(count=0) -%}
          {%- for item in states['sensor']
            if item.entity_id.startswith('sensor.temperature_') and item.state not in ('unknown', 'unavailable')
              and now() - item.last_changed >= timedelta (hours=threshold) -%}
          {%- set result.count = result.count + 1 -%}
          {%- endfor -%}
          {{ result.count }}
        attribute_templates:
          devices: >
            {%- set threshold = 24 -%}
            {%- set result = namespace(items=[]) -%}
            {%- for item in states['sensor']
              if item.entity_id.startswith('sensor.temperature_') and item.state not in ('unknown', 'unavailable')
                and now() - item.last_changed >= timedelta (hours=threshold) -%}
            {% set result.items = result.items + [item.entity_id] %}
            {%- endfor -%}
            {{ result.items }}

      # da usare in UI per rappresentare stato assente
      status_controlcenter:
        unit_of_measurement: "%"
        device_class: battery
        value_template: >-
          {% if is_state('device_tracker.controlcenter', 'home') %}
          {{ states.sensor.controlcenter_battery_level.state }}
          {% else %}
          0
          {% endif %}

      status_thermostat:
        unit_of_measurement: "%"
        device_class: battery
        value_template: >-
          {% if not is_state('climate.boiler_main', 'unavailable') %}
          100
          {% else %}
          0
          {% endif %}

      status_mediarasp:
        unit_of_measurement: "%"
        device_class: battery
        value_template: >-
          {% if is_state('device_tracker.rasp', 'home') %}
          100
          {% else %}
          0
          {% endif %}

automation:
  - alias: control_center_low_battery
    id: a64c4dea-2c0d-11ef-9cb5-e7d9d5cb4346
    description: Notifica centro di controllo scarico
    trigger:
      - trigger: numeric_state
        entity_id: sensor.controlcenter_battery_level
        below: 10
    action:
      - action: script.notify_info
        data:
          category: Sistema
          message: |-
            Batteria del centro di controllo bassa: {{ states.sensor.controlcenter_battery_level.state_with_unit }}

  - alias: alert_low_batteries
    id: d60577fa-2c0d-11ef-b5c7-9ff802017551
    description: Notifica batterie scariche
    trigger:
      trigger: numeric_state
      entity_id: sensor.low_batteries
      above: '0'
      # evita sensori che riportano microcambiamenti
      for: 02:00:00
    action:
      - action: persistent_notification.create
        data:
          title: Batterie scariche
          message: >
            {%- for item in states['sensor'] if item.entity_id in states.sensor.low_batteries.attributes.devices -%}
            - {{ item.attributes.friendly_name }} ({{ item.state }}%)
            {% endfor -%}
          notification_id: alert_low_batteries
      - action: script.notify_info
        data:
          category: Sistema
          message: |-
            Batterie scariche:
            {% for item in states['sensor'] if item.entity_id in states.sensor.low_batteries.attributes.devices -%}
            - {{ item.attributes.friendly_name }} ({{ item.state }}%)
            {% endfor -%}

  - alias: alert_low_batteries_dismiss
    trigger:
      trigger: numeric_state
      entity_id: sensor.low_batteries
      below: '1'
    action:
      - action: persistent_notification.dismiss
        data:
          notification_id: alert_low_batteries

  - alias: alert_temperature_sensors_stuck
    id: 8fc0c7f2-78b3-11ef-ade2-ffb2e6ef8276
    description: Notifica sensori di temperature bloccati
    trigger:
      trigger: numeric_state
      entity_id: sensor.temperature_sensors_stuck
      above: '0'
      # evita sensori che riportano microcambiamenti
      for: 02:00:00
    action:
      - action: persistent_notification.create
        data:
          title: Sensori bloccati
          message: >
            {%- for item in states['sensor'] if item.entity_id in states.sensor.temperature_sensors_stuck.attributes.devices -%}
            - {{ item.attributes.friendly_name }} ({{ item.state }}%)
            {% endfor -%}
          notification_id: alert_temperature_sensors_stuck
      - action: script.notify_info
        data:
          category: Sistema
          message: |-
            Sensori bloccati:
            {% for item in states['sensor'] if item.entity_id in states.sensor.temperature_sensors_stuck.attributes.devices -%}
            - {{ item.attributes.friendly_name }} ({{ item.state }}%)
            {% endfor -%}

  - alias: alert_temperature_sensors_stuck_dismiss
    trigger:
      trigger: numeric_state
      entity_id: sensor.temperature_sensors_stuck
      below: '1'
    action:
      - action: persistent_notification.dismiss
        data:
          notification_id: alert_temperature_sensors_stuck

  - alias: alert_home_assistant_startup
    trigger:
      trigger: homeassistant
      event: start
    action:
      - action: script.notify_debug
        data:
          message: |-
            Home Assistant avviato

alert:
  battery_discharging_scatola:
    name: Batteria scatola in scaricamento
    message: 'Batteria scatola in scaricamento: {{ states.sensor.battery_scatola.state_with_unit }}'
    done_message: 'Batteria scatola carica.'
    entity_id: binary_sensor.battery_discharging_scatola
    state: 'on'
    repeat: 5
    can_acknowledge: true
    notifiers:
      - information
