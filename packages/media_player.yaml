# Media players
# FIXME questo file contiene automazioni che gestiscono in concerto i media_player: riorganizzare/rinominare/splittare

homeassistant:
  customize:
    media_player.kodi:
      friendly_name: Kodi

    media_player.tv:
      friendly_name: TV

    media_player.lounge:
      friendly_name: Music - Lounge

    media_player.snapcast_living:
      friendly_name: Music - Living

    media_player.snapcast_bedroom:
      friendly_name: Music - Bedroom

    media_player.snapcast_bathroom:
      friendly_name: Music - Bathroom

    media_player.snapcast_cfba28f0_3339_48ea_80e6_7426830806fe:
      friendly_name: Music - Mobile Daniele

    media_player.snapcast_kitchen:
      friendly_name: Music - Kitchen

media_source:

media_player:
  - platform: kodi
    host: !secret mediarasp_host
    name: kodi
    # turn_on_action no longer supported
    # turn_off_action no longer supported

group:

  # Tutti i media
  media:
    name: Media
    icon: mdi:television-classic
    entities:
      # conflicts with Kodi - media_player.tv
      - media_player.kodi
      - media_player.lounge
      - media_player.music
      - media_player.bedroom

  # Media non coinvolti nel TTS
  media_non_tts:
    name: Media non TTS
    icon: mdi:television-classic
    entities:
      # conflicts with Kodi - media_player.tv
      - media_player.kodi
      - media_player.music
      - media_player.bedroom

  # Media che producono i suoni principali (living room)
  # Usato per mettere in pausa quando deve parlare il TTS
  media_big_sound:
    name: Media grandi suoni
    icon: mdi:speaker
    entities:
      # Non affidabile: in standby sparisce l'IP; comunque la TV è gestita da Kodi
      #- media_player.tv
      - media_player.kodi
      - media_player.music

  media_audio_only:
    name: Media solo audio
    icon: mdi:speaker
    entities:
      - media_player.kodi
      - media_player.music
      - media_player.bedroom

  # Musica per casa
  media_music_rooms:
    name: Musica
    icon: mdi:music
    entities:
      - media_player.snapcast_living
      - media_player.snapcast_bedroom
      - media_player.snapcast_kitchen
      - media_player.snapcast_cfba28f0_3339_48ea_80e6_7426830806fe

command_line:
  - sensor:
      name: news_tv_channelid
      command: bin/tv-channel.sh "{{ states('input_text.news_tv_channel_name') }}"
      scan_interval: 600

binary_sensor:

  - platform: template
    sensors:
      # TV accesa su Kodi
      tv_on_kodi:
        value_template: >-
          {{ is_state('media_player.tv', 'on') and is_state_attr('media_player.tv', 'source', 'HDMI 3') }}

      # Modalità visione video/cinema o TV in canale
      cinema_mode:
        value_template: >-
          {{ (is_state('media_player.kodi', 'playing') and states.media_player.kodi.attributes.media_content_type in ['movie','tvshow','video']) or
             (is_state('media_player.tv', 'on') and states.media_player.tv.attributes.media_content_type == 'channel') }}

      # Modalità cinema in pausa
      # Pausa di Kodi oppure TV muta
      cinema_paused_mode:
        value_template: >-
          {{ (is_state('media_player.kodi', 'paused') and states.media_player.kodi.attributes.media_content_type in ['movie','tvshow','video']) or
             (is_state('media_player.tv', 'on') and is_state_attr('media_player.tv', 'is_volume_muted', true) and states.media_player.tv.attributes.media_content_type == 'channel') }}

script:
  tv_channel_favourite_news:
    sequence:
      - action: media_player.turn_on
        entity_id: media_player.tv
      - action: media_player.play_media
        data:
          entity_id: media_player.kodi
          media_content_type: 'channel'
          media_content_id: "{{ states('sensor.news_tv_channelid') }}"

  # Pronuncia qualcosa
  say_something:
    sequence:
      # Metti tutto in pausa
      - action: script.suspend_media_for_lounge
      # Ferma la riproduzione da lounge
      - action: media_player.media_stop
        entity_id: media_player.lounge
      - action: script.set_tts_volume
      - action: tts.microsoft_say
        entity_id: media_player.lounge
        data:
          # not supported by Amazon Polly -- language: "{{ language|default('it') }}"
          message: "<p>{{ message }}</p>"

  # Pronuncia qualcosa da un audio di TTS pregenerato
  say_something_rendered:
    sequence:
      # Metti tutto in pausa
      - action: script.suspend_media_for_lounge
      # Ferma la riproduzione da lounge
      - action: media_player.media_stop
        entity_id: media_player.lounge
      - action: script.set_tts_volume
      - action: media_player.play_media
        data:
          entity_id: media_player.lounge
          media_content_type: music
          media_content_id: "{{ url }}"

  # Un buon volume per la pronuncia
  set_tts_volume:
    sequence:
      - action: media_player.volume_set
        data:
          entity_id: media_player.lounge
          volume_level: !secret lounge_volume

  # Sospende tutti i media per una riproduzione da lounge imminente
  suspend_media_for_lounge:
    sequence:
      # Pausa tutti i media grandi suoni
      - action: media_player.media_pause
        data:
          entity_id: group.media_big_sound

  # Workaround for Philips API that acts as toggle mute always
  mute_tv:
    sequence:
      - condition: template
        value_template: "{{ is_state_attr('media_player.tv', 'is_volume_muted', false) }}"
      # FIXME Philips API seems to act as toggle always
      - action: media_player.volume_mute
        data:
          entity_id: media_player.tv
          is_volume_muted: true

  # Workaround for Philips API that acts as toggle mute always
  unmute_tv:
    sequence:
      - condition: template
        value_template: "{{ is_state_attr('media_player.tv', 'is_volume_muted', true) }}"
      # FIXME Philips API seems to act as toggle always
      - action: media_player.volume_mute
        data:
          entity_id: media_player.tv
          is_volume_muted: false

input_select:
  kodi_last_media:
    options:
      - none
      - movie
      - tvshow
      - video
      - music

input_text:
  volume_preduck:
    name: Volume pre-duck
    initial: "0.5"
  news_tv_channel_name:
    name: TV news channel

automation:

  - alias: tv_request_turn_on
    trigger:
      - trigger: device
        device_id: 91f5981788a21313c9056f8ba1de975f
        domain: webostv
        type: webostv.turn_on
    action:
      action: kodi.call_method
      data:
        entity_id: media_player.kodi
        method: Addons.ExecuteAddon
        addonid: script.json-cec
        params:
          command: activate

  - alias: kodi_request_turn_on
    trigger:
      trigger: device
      device_id: 990074f3127e3df453ac96e856d47c37
      domain: kodi
      entity_id: media_player.kodi
      type: turn_on
    action:
      - action: wake_on_lan.send_magic_packet
        data:
          mac: !secret mediarasp_mac_address

  - alias: kodi_request_turn_off
    trigger:
      trigger: device
      device_id: 990074f3127e3df453ac96e856d47c37
      domain: kodi
      entity_id: media_player.kodi
      type: turn_off
    action:
      - action: media_player.media_stop
        entity_id: media_player.kodi
      - action: kodi.call_method
        data:
          entity_id: media_player.kodi
          method: Addons.ExecuteAddon
          addonid: script.json-cec
          params:
            command: standby

  - alias: update_kodi_last_media
    trigger:
      - trigger: state
        entity_id: 'media_player.kodi'
        to: 'playing'
    action:
      - action: input_select.select_option
        data:
          entity_id: input_select.kodi_last_media
          option: "{{ states.media_player.kodi.attributes.media_content_type }}"

  - alias: pause_on_phone_call
    trigger:
      - trigger: state
        entity_id: sensor.daniele_shiba_phone_state
        from: 'idle'
    action:
      # Chiamata entrante o uscente, pausa i media grandi suoni
      - action: media_player.media_pause
        data:
          entity_id: group.media_big_sound

  - alias: pause_music_on_video_start
    trigger:
      - trigger: state
        entity_id: media_player.kodi
        to: 'playing'
    action:
      # Pausa musica
      - action: media_player.media_pause
        data:
          entity_id: media_player.music

  - alias: pause_video_on_music_start
    trigger:
      - trigger: state
        entity_id: media_player.music
        to: 'playing'
    action:
      # Pausa Kodi
      - action: media_player.media_pause
        data:
          entity_id: media_player.kodi

  # Abbassa la musica quando non c'è attività in soggiorno
  - alias: duck_volume_living
    trigger:
      - trigger: state
        entity_id: group.motion_living
        to: 'off'
    action:
      - action: input_text.set_value
        data:
          entity_id: input_text.volume_preduck
          value: '{{ states.media_player.snapcast_living.attributes.volume_level }}'
      # Se abbiamo bisogno di luce in sala non proseguire
      # Abbiamo comunque impostato il volume pre-duck
      - condition: state
        entity_id: input_boolean.need_living_utility_light
        state: 'off'
      # Se notebook attivo non proseguire
      # Abbiamo comunque impostato il volume pre-duck
      - condition: state
        entity_id: binary_sensor.activity_notebook_daniele
        state: 'off'
      - action: media_player.volume_set
        data:
          # Living
          entity_id: media_player.snapcast_living
          volume_level: !secret music_duck_volume

  # Ripristina volume della musica quando c'è attività in soggiorno
  - alias: unduck_volume_living
    trigger:
      - trigger: state
        entity_id: group.motion_living
        to: 'on'
    action:
      - action: media_player.volume_set
        data:
          entity_id: media_player.snapcast_living
          volume_level: '{{ states.input_text.volume_preduck.state }}'

  # Se bedroom in pausa da più di tot tempo, stoppalo
  - alias: stop_speaker_bedroom_if_paused
    trigger:
      - trigger: state
        entity_id: media_player.bedroom
        to: 'paused'
        for: '00:05:00'
    action:
      - action: media_player.media_stop
        entity_id: media_player.bedroom

  - alias: trigger_mediarasp_update
    trigger:
      trigger: mqtt
      topic: mopidy/music/i/sta
    action:
      - action: homeassistant.update_entity
        data:
          entity_id: media_player.music

  - alias: trigger_speaker_bedroom_update
    trigger:
      trigger: mqtt
      topic: mopidy/bedroom/i/sta
    action:
      - action: homeassistant.update_entity
        data:
          entity_id: media_player.bedroom

  - alias: kodi_crash_workaround
    description: Spegni la TV dopo un crash di Kodi se nessuno sta guardando
    trigger:
      trigger: state
      # il media player non supporta gli stati on/off apparentemente
      entity_id: device_tracker.tv
      to: "home"
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: input_select.house_mode
          state: night
        - condition: state
          entity_id: input_select.house_mode
          state: away
        - condition: state
          entity_id: input_select.house_mode
          state: extended_away
    action:
      - action: media_player.turn_off
        entity_id: media_player.kodi
      # Questo potrebbe fallire quindi lo mettiamo per ultimo
      - action: media_player.turn_off
        entity_id: media_player.tv

  - alias: bathroom_activate_media_controller
    description: Attiva BubbleUPnP sul telefono quando lo speaker in bagno si connette
    trigger:
      trigger: state
      entity_id: media_player.snapcast_bathroom
      to: "idle"
    condition:
      condition: state
      entity_id: person.daniele
      state: home
    action:
      - action: notify.mobile_app_daniele_shiba
        data:
          message: command_broadcast_intent
          data:
            intent_package_name: "com.bubblesoft.android.bubbleupnp"
            intent_action: "com.bubblesoft.android.bubbleupnp.START_SERVICE"
      - delay: 6
      - action: notify.mobile_app_daniele_shiba
        data:
          message: command_broadcast_intent
          data:
            intent_package_name: "com.bubblesoft.android.bubbleupnp"
            intent_action: "com.bubblesoft.android.bubbleupnp.SET_RENDERER"
            intent_extras: "name:Music House (OpenHome)"
