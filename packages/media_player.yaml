# Media players

homeassistant:
  customize:
    media_player.kodi:
      friendly_name: Kodi

    media_player.tv:
      friendly_name: TV

    media_player.lounge:
      friendly_name: Lounge

media_player:
  - platform: kodi
    host: rasp
    name: kodi
    # turn_on_action no longer supported
    # turn_off_action no longer supported
  - platform: philips_js
    host: !secret tv_ip_address
    name: tv
    api_version: 1
    turn_on_action:
      service: kodi.call_method
      data:
        entity_id: media_player.kodi
        method: Addons.ExecuteAddon
        addonid: script.json-cec
        params:
          command: activate

group:

  # Tutti i media
  media:
    name: Media
    icon: mdi:television-classic
    entities:
      - media_player.tv
      - media_player.kodi
      - media_player.lounge

  # Media non coinvolti nel TTS
  media_non_tts:
    name: Media
    icon: mdi:television-classic
    entities:
      - media_player.tv
      - media_player.kodi

binary_sensor:

  - platform: template
    sensors:
      # Modalità visione video/cinema o TV in canale
      cinema_mode:
        value_template: >-
          {{ (is_state('media_player.kodi', 'playing') and states.media_player.kodi.attributes.media_content_type in ['movie','tvshow','video']) or
             (is_state('media_player.tv', 'on') and states.media_player.tv.attributes.media_content_type == 'channel') }}

      # Modalità cinema in pausa
      # Pausa di Kodi oppure TV muta
      cinema_paused_mode:
        value_template: >-
          {{ (is_state('media_player.kodi', 'paused') and states.media_player.kodi.attributes.media_content_type in ['movie','tvshow','video']) or
             (is_state('media_player.tv', 'on') and is_state_attr('media_player.tv', 'is_volume_muted', true) and states.media_player.tv.attributes.media_content_type == 'channel') }}


# FIXME le API di Philipsmerda non funzionano per cambiare canale, quindi facciamo finta di digitarlo
# Canale 507 (La7 HD)
rest_command:
  tv_channel_favourite_news_digit1:
    url: http://192.168.0.205:1925/1/input/key
    method: post
    payload: '{"key": "Digit0"}'
  tv_channel_favourite_news_digit2:
    url: http://192.168.0.205:1925/1/input/key
    method: post
    payload: '{"key": "Digit5"}'
  tv_channel_favourite_news_digit3:
    url: http://192.168.0.205:1925/1/input/key
    method: post
    payload: '{"key": "Digit0"}'
  tv_channel_favourite_news_digit4:
    url: http://192.168.0.205:1925/1/input/key
    method: post
    payload: '{"key": "Digit7"}'

script:
  tv_channel_favourite_news:
    sequence:
      - service: media_player.turn_on
        entity_id: media_player.tv
      - service: media_player.play_media
        data:
          entity_id: media_player.kodi
          media_content_type: 'channel'
          media_content_id: !secret tv_news_channel

  # Pronuncia qualcosa
  say_something:
    sequence:
      # Metti tutto in pausa
      - service: script.suspend_media_for_lounge
      # Ferma la riproduzione da lounge
      - service: media_player.media_stop
        entity_id: media_player.lounge
      - service: script.set_tts_volume
      - service: tts.microsoft_say
        entity_id: media_player.lounge
        data_template:
          # not supported by Amazon Polly -- language: "{{ language|default('it') }}"
          message: "<p>{{ message }}</p>"

  # Pronuncia qualcosa da un audio di TTS pregenerato
  say_something_rendered:
    sequence:
      # Metti tutto in pausa
      - service: script.suspend_media_for_lounge
      # Ferma la riproduzione da lounge
      - service: media_player.media_stop
        entity_id: media_player.lounge
      - service: script.set_tts_volume
      - service: media_player.play_media
        data_template:
          entity_id: media_player.lounge
          media_content_type: music
          media_content_id: "{{ url }}"

  # Un buon volume per la pronuncia
  set_tts_volume:
    sequence:
      - service: media_player.volume_set
        data:
          entity_id: media_player.lounge
          volume_level: !secret lounge_volume

  # Sospende tutti i media per una riproduzione da lounge imminente
  suspend_media_for_lounge:
    sequence:
      # Pausa Kodi
      - service: media_player.media_pause
        data:
          entity_id: media_player.kodi
      # Muta la TV
      - condition: state
        entity_id: media_player.tv
        state: 'on'
      - service: script.mute_tv

  # Workaround for Philips API that acts as toggle mute always
  mute_tv:
    sequence:
      - condition: template
        value_template: "{{ is_state_attr('media_player.tv', 'is_volume_muted', false) }}"
      # FIXME Philips API seems to act as toggle always
      - service: media_player.volume_mute
        data:
          entity_id: media_player.tv
          is_volume_muted: true

  # Workaround for Philips API that acts as toggle mute always
  unmute_tv:
    sequence:
      - condition: template
        value_template: "{{ is_state_attr('media_player.tv', 'is_volume_muted', true) }}"
      # FIXME Philips API seems to act as toggle always
      - service: media_player.volume_mute
        data:
          entity_id: media_player.tv
          is_volume_muted: false

input_select:
  kodi_last_media:
    options:
      - none
      - movie
      - tvshow
      - video
      - music

automation:

  - alias: kodi_request_turn_on
    trigger:
      platform: device
      device_id: db9f8246f92511ea9a5be195168bca21
      domain: kodi
      entity_id: media_player.kodi
      type: turn_on
    action:
      - service: wake_on_lan.send_magic_packet
        data:
          mac: !secret mediarasp_mac_address

  - alias: kodi_request_turn_off
    trigger:
      platform: device
      device_id: db9f8246f92511ea9a5be195168bca21
      domain: kodi
      entity_id: media_player.kodi
      type: turn_off
    action:
      - service: media_player.media_stop
        entity_id: media_player.kodi
      - service: kodi.call_method
        data:
          entity_id: media_player.kodi
          method: Addons.ExecuteAddon
          addonid: script.json-cec
          params:
            command: standby

  - alias: update_kodi_last_media
    trigger:
      - platform: state
        entity_id: 'media_player.kodi'
        to: 'playing'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.kodi_last_media
          option: "{{ states.media_player.kodi.attributes.media_content_type }}"
