homeassistant:
  customize:
    input_boolean.night_mode_disabled_today:
      friendly_name: 'Modalità notte disattivata per oggi'
      icon: mdi:weather-night

script:

  night_mode_warning_start:
    sequence:
      - service: timer.cancel
        data:
          entity_id: timer.night_mode_warning
      - service: timer.start
        data:
          entity_id: timer.night_mode_warning
          duration: "00:03:00"

  # Notifica l'utente che sta per attivarsi la modalità notte
  notify_night_mode_warning:
    sequence:
      - service: notify.mobile_app_daniele_payton
        data_template:
          title: "Modalità notte"
          message: "Sto per attivare la modalità notte!"
          data:
            tag: night_mode_warning
            sticky: 'true'
            priority: high
            ttl: 180
            actions:
              # Rimanda di 15 minuti
              - action: night_mode_snooze
                title: Rimanda
              # Attiva ora
              - action: night_mode_enable_now
                title: Attiva
              # Annulla per questa notte
              - action: night_mode_cancel
                title: Annulla
      # Debug: notifica anche IM
      - service: notify.kontalk_daniele
        data_template:
          title: "Info"
          message: "Sto per attivare la modalità notte!"

  # Cancella la notifica della modalità notte
  cancel_night_mode_warning:
    sequence:
      - service: notify.mobile_app_daniele_payton
        data_template:
          message: clear_notification
          data:
            priority: high
            tag: night_mode_warning

automation:

  # Avvisami che sta per attivarsi la modalità notte
  # Se non ci saranno cambiamenti si attiverà automaticamente in 3 minuti
  - alias: night_mode_warning
    trigger:
      platform: time_pattern
      # FIXME hard-coding variables
      # because secrets in templates are not supported
      minutes: "*"
    condition:
      # Le condizioni sono solo in questa automazione perché
      # dopo il primo triggering la cancellazione viene delegata all'utente.
      condition: and
      conditions:
        # Ora notturna
        - condition: time
          # FIXME hard-coding variables: night_mode_hour_start, night_mode_hour_end
          # because secrets in templates are not supported
          after: '23:00:00'
          before: '04:00:00'
        # Non siamo già in modalità notte
        - condition: template
          value_template: "{{ not is_state('input_select.house_mode', 'night') }}"
        # Modalità notte non disabilitata
        - condition: state
          entity_id: input_boolean.night_mode_disabled_today
          state: 'off'
        # Qualcuno in casa
        - condition: numeric_state
          entity_id: sensor.people_count_home
          above: '0'
        # Tutte i presenti in camera
        - condition: template
          value_template: '{{ states.input_number.people_count_bedroom.state | float == states.sensor.people_count_home.state | float }}'
        # Timer warning non attivo
        - condition: template
          value_template: "{{ not is_state('timer.night_mode_warning', 'active') }}"
        # Timer snooze non attivo
        - condition: template
          value_template: "{{ not is_state('timer.night_mode_snooze', 'active') }}"
        # Tutte le luci spente (tranne la luce del letto)
        - condition: template
          value_template: >
            {% set domain = 'light' %}
            {% set state = 'off' %}
            {{ states[domain] | rejectattr('entity_id','eq', 'light.bedroom_left') | list | count ==
              states[domain] | selectattr('state','eq', state) | rejectattr('entity_id','eq', 'light.bedroom_left') | list | count }}
        # Tutte i media idle
        - condition: state
          entity_id: media_player.kodi
          state: idle
        - condition: template
          value_template: "{{ is_state('media_player.music', 'off') or is_state('media_player.music', 'paused') }}"
        - condition: state
          entity_id: media_player.tv
          state: 'off'
        - condition: state
          entity_id: device_tracker.tv
          state: 'not_home'
        - condition: template
          value_template: "{{ is_state('media_player.lounge', 'idle') or is_state('media_player.lounge', 'off') }}"
        # Ogni movimento tranne in camera da letto cessato
        - condition: state
          entity_id: group.motion_not_bedroom
          state: 'off'
        # Cellulare in carica
        - condition: template
          value_template: "{{ is_state('sensor.daniele_payton_battery_state', 'charging') }}"
        # TODO Cellulare in standby (non in uso)
        # ...
        # Luminosità bassa in tutte le stanze
        - condition: numeric_state
          entity_id: sensor.living_main_lux
          below: !secret living_lux_darkness_threshold
        - condition: numeric_state
          entity_id: sensor.bedroom_lux
          below: !secret bedroom_lux_darkness_threshold
        # Notebook spento o idle
        - condition: state
          entity_id: binary_sensor.activity_notebook_daniele
          state: 'off'
    action:
      - service: script.night_mode_warning_start

  # Attivazione modalità notte per scadenza del timer
  - alias: night_mode_enable
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.night_mode_warning
    action:
      - service: script.cancel_night_mode_warning
      - service: input_select.select_option
        data:
          entity_id: input_select.house_mode
          option: night

  # Timer warning modalità notte partito
  - alias: night_mode_warning_started
    trigger:
      platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.night_mode_warning
    action:
      # Notifica per override/snooze
      - service: script.notify_night_mode_warning

  # Annullamento del timer di warning della modalità notte
  - alias: night_mode_cancelled
    trigger:
      platform: event
      event_type: timer.cancelled
      event_data:
        entity_id: timer.night_mode_warning
    action:
      - service: script.cancel_night_mode_warning

  # Utente ha richiesto snooze, riavvia il timer per 15 minuti (12 snooze + 3 warning)
  - alias: night_mode_snooze
    trigger:
      - event_data:
          action: night_mode_snooze
        event_type: mobile_app_notification_action
        platform: event
    action:
      - service: timer.cancel
        data:
          entity_id: timer.night_mode_warning
      - service: timer.cancel
        data:
          entity_id: timer.night_mode_snooze
      - service: timer.start
        data_template:
          entity_id: timer.night_mode_snooze
          duration: "00:12:00"

  # Scadenza dello snooze della modalità notte
  - alias: night_mode_snoozed
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.night_mode_snooze
    action:
      # Riavvia timer warning
      - service: script.night_mode_warning_start

  # Utente ha richiesto attivazione immediata
  - alias: night_mode_enable_now
    trigger:
      - event_data:
          action: night_mode_enable_now
        event_type: mobile_app_notification_action
        platform: event
    action:
      - service: timer.finish
        data:
          entity_id: timer.night_mode_warning

  # Utente ha richiesto annullamento per stanotte
  - alias: night_mode_cancel
    trigger:
      - event_data:
          action: night_mode_cancel
        event_type: mobile_app_notification_action
        platform: event
    action:
      # Imposta qualche flag per evitare che night_mode_warning si riattivi
      - service: input_boolean.turn_on
        entity_id: input_boolean.night_mode_disabled_today
      - service: timer.cancel
        data:
          entity_id: timer.night_mode_warning

  # Abilita modalità notte disattivata dall'utente la sera prima
  - alias: night_mode_disabled_enable
    trigger:
      platform: time
      at: "06:00:00"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.night_mode_disabled_today

  - alias: house_mode_night_mode_night
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: night
    action:
      # Usato per far capire all'automazione che non deve attivarsi
      - service: input_boolean.turn_on
        entity_id: input_boolean.night_mode_disabled_today
      # Inutile stare a controllare le condizioni della night mode se ci siamo già
      - service: automation.turn_off
        entity_id:
          - automation.night_mode_warning

  - alias: house_mode_night_mode_not_night
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        from: night
    action:
      # Riattiva i controlli per la night mode automatica
      - service: automation.turn_on
        entity_id:
          - automation.night_mode_warning

timer:

  night_mode_warning:
    name: Timer notte
    icon: mdi:weather-night

  night_mode_snooze:
    name: Timer snooze notte
    icon: mdi:alarm-snooze

input_boolean:

  # TODO automazione basata su questo booleano che attiva/disattiva le altre (invece di usare il booleano come condizione)
  night_mode_disabled_today:
    initial: off
