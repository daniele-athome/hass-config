# HVAC systems

homeassistant:
  customize:
    climate.home_boiler:
      friendly_name: Riscaldamento
    automation.ThermostatDown:
      friendly_name: Termostato irraggiungibile
    automation.ThermostatStuck:
      friendly_name: Termostato bloccato

shell_command:

  thermorasp_publish_temp_bedroom: >-
    mosquitto_pub
    -h thermostat.local
    -t homeassistant/thermorasp/sensor/temp_bedroom/control
    -m '{"type":"temperature", "validity": 900, "unit": "celsius", "value": {{ states.sensor.temp_bedroom.state }}}'

  thermorasp_publish_temp_living: >-
    mosquitto_pub
    -h thermostat.local
    -t homeassistant/thermorasp/sensor/temp_living/control
    -m '{"type":"temperature", "validity": 900, "unit": "celsius", "value": {{ states.sensor.env_living_temperature.state }}}'

automation:

  # Termostato down
  - alias: thermostat_down
    trigger:
      - platform: state
        entity_id: device_tracker.thermostat
        to: 'not_home'
        for:
          minutes: 8
    action:
      service: notify.kontalk_daniele
      data_template:
        title: "Allarme"
        message: |-
          Termostato non raggiungibile!

  # Termostato bloccato (caldaia accesa)
  - alias: thermostat_stuck
    trigger:
      - platform: state
        entity_id: climate.home_boiler
        to: 'heat'
        for:
          hours: 6
    action:
      service: notify.kontalk_daniele
      data_template:
        title: "Allarme"
        message: |-
          Riscaldamento attivo da piÃ¹ di 6 ore!

  - alias: thermorasp_publish_temp_bedroom
    trigger:
      - platform: state
        entity_id: sensor.temp_bedroom
      # Il termostato richiede comunque un aggiornamento ogni 900 secondi
      - platform: time_pattern
        minutes: "/10"
    action:
      - service: shell_command.thermorasp_publish_temp_bedroom
      #- service: mqtt.publish
      #  data_template:
      #    topic: "homeassistant/thermorasp/sensor/temp_bedroom/control"
      #    payload: '{"type":"temperature", "validity": 900, "unit": "celsius", "value": {{ states.sensor.temp_bedroom.state }}}'

  - alias: thermorasp_publish_temp_living
    trigger:
      - platform: state
        entity_id: sensor.env_living_temperature
      # Il termostato richiede comunque un aggiornamento ogni 900 secondi
      - platform: time_pattern
        minutes: "/10"
    action:
      - service: shell_command.thermorasp_publish_temp_living
      #- service: mqtt.publish
      #  data_template:
      #    topic: "homeassistant/thermorasp/sensor/temp_living/control"
      #    payload: '{"type":"temperature", "validity": 900, "unit": "celsius", "value": {{ states.sensor.env_living_temperature.state }}}'

  - alias: thermorasp_set_target_temperature
    trigger:
      - platform: mqtt
        topic: 'homeassistant/_internal/thermorasp/target_temperature'
    action:
      - service: script.home_boiler_set_target_temperature
        data:
          temperature: '{{ trigger.payload }}'

rest_command:

  # 12:34:00.787 XHRPOSThttp://thermostat.local/api/schedules/active/volatile
  #    {"name":"generic.TargetTemperatureBehavior","order":0,"start_time":7954,"end_time":8640,"config":{"target_temperature":22.5},"sensors":["temp_bedroom"],"devices":["home_boiler"]}

  home_boiler_set_active_volatile_generic:
    url: !secret thermostat_set_active_volatile_url
    method: post
    payload: >-
      {
        "name": "generic.TargetTemperatureBehavior",
        "order": 0,
        "start_time": {{start_time}},
        "end_time": {{end_time}},
        "config": {
          "target_temperature": {{target_temperature}}
        },
        "sensors": [{{sensors}}],
        "devices":[{{devices}}]
      }
    content_type:  'application/json; charset=utf-8'

sensor:

  - platform: command_line
    name: current_minute_for_hvac
    command: "bin/current_minute.py"

  - platform: command_line
    name: today_last_minute_for_hvac
    command: "bin/today_last_minute.py"

script:

  home_boiler_set_target_temperature:
    sequence:
      - service: rest_command.home_boiler_set_active_volatile_generic
        data:
          start_time: '{{ states.sensor.current_minute_for_hvac.state }}'
          end_time: '{{ states.sensor.today_last_minute_for_hvac.state }}'
          target_temperature: '{{ temperature }}'
          # FIXME not pretty
          sensors: '"temp_living","temp_bedroom"'
          # FIXME not pretty
          devices: '"home_boiler"'

# Termostato principale
climate:
  - platform: mqtt
    name: home_boiler
    precision: 0.1
    temp_step: 0.5
    min_temp: 10
    max_temp: 30
    modes:
      - 'off'
      - 'heat'
    #current_temperature_topic: ''
    #current_temperature_template: '{{ value_json.xxx }}'
    mode_state_topic: 'homeassistant/thermorasp/device/home_boiler/state'
    mode_state_template: "{{ 'heat' if value_json.enabled else 'off' }}"
    temperature_state_topic: 'homeassistant/thermorasp/behavior/active'
    temperature_state_template: '{{ value_json.config.target_temperature }}'
    temperature_command_topic: 'homeassistant/_internal/thermorasp/target_temperature'
