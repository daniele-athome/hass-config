# HVAC systems

homeassistant:
  customize:
    climate.boiler_main:
      friendly_name: Riscaldamento
    automation.ThermostatDown:
      friendly_name: Termostato irraggiungibile
    automation.ThermostatStuck:
      friendly_name: Termostato bloccato

input_number:

  hvac_heating_temperature_day:
    name: 'Temperature riscaldamento diurna'
    min: 10
    max: 30
    step: 0.5

  hvac_heating_temperature_night:
    name: 'Temperature riscaldamento notturna'
    min: 10
    max: 30
    step: 0.5

input_boolean:

  hvac_heating_waiting_alarm_clock:
    name: 'Riscaldamento attivo in attesa della sveglia'
    initial: false

automation:

  # Termostato down
  - alias: thermostat_down
    trigger:
      - platform: state
        entity_id: device_tracker.thermostat
        to: 'not_home'
        for:
          minutes: 8
    action:
      service: notify.kontalk_daniele
      data:
        title: "Allarme"
        message: |-
          Termostato non raggiungibile!

  # Termostato bloccato (caldaia accesa)
  - alias: thermostat_stuck
    trigger:
      - platform: state
        entity_id: climate.boiler_main
        attribute: hvac_action
        to: "heating"
        for:
          hours: 6
    action:
      service: notify.kontalk_daniele
      data:
        title: "Allarme"
        message: |-
          Riscaldamento attivo da più di 6 ore!

  - alias: house_mode_hvac_away
    description: 'Disattiva climatizzazione quando usciti da casa per un certo tempo'
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: "away"
        for:
          minutes: 10
      - platform: state
        entity_id: input_select.house_mode
        to: "extended_away"
    action:
      service: climate.turn_off
      data:
        entity_id: climate.boiler_main

  - alias: house_mode_hvac_not_away
    description: 'Attiva climatizzazione quando rientrati in casa per un certo tempo'
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        from: "away"
        for:
          minutes: 3
      - platform: state
        entity_id: input_select.house_mode
        from: "extended_away"
        for:
          minutes: 3
    action:
      service: climate.turn_on
      data:
        entity_id: climate.boiler_main

  - alias: house_mode_hvac_night
    description: 'Diminuisci la temperatura target di notte'
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        to: "night"
    action:
      # salva la temperatura target attuale
      - service: input_number.set_value
        data:
          entity_id: input_number.hvac_heating_temperature_day
          value: "{{ state_attr('climate.boiler_main', 'temperature') }}"
      - service: climate.set_temperature
        data:
          entity_id: climate.boiler_main
          temperature: "{{ states('input_number.hvac_heating_temperature_night') }}"
      - service: notify.kontalk_daniele
        data:
          title: ''
          message: |-
            Riscaldamento notturno impostato a {{ state_attr('climate.boiler_main', 'temperature') }}° C
            Target diurno salvato a {{ states('input_number.hvac_heating_temperature_day') }}° C

  # Ripristino temperatura target diurna in caso di risveglio senza sveglia
  - alias: house_mode_hvac_not_night
    description: 'Ripristina la temperatura target di giorno'
    trigger:
      - platform: state
        entity_id: input_select.house_mode
        from: "night"
    condition:
      # non procedere se stiamo aspettando la sveglia
      # vuol dire che X ore prima della sveglia è stata già impostata la temperatura diurna
      condition: state
      entity_id: input_boolean.hvac_heating_waiting_alarm_clock
      state: 'off'
    action:
      # salva la temperatura target attuale
      - service: input_number.set_value
        data:
          entity_id: input_number.hvac_heating_temperature_night
          value: "{{ state_attr('climate.boiler_main', 'temperature') }}"
      - service: climate.set_temperature
        data:
          entity_id: climate.boiler_main
          temperature: "{{ states('input_number.hvac_heating_temperature_day') }}"
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.hvac_heating_waiting_alarm_clock
      - service: notify.kontalk_daniele
        data:
          title: ''
          message: |-
            Riscaldamento diurno impostato a {{ state_attr('climate.boiler_main', 'temperature') }}° C
            Target notturno salvato a {{ states('input_number.hvac_heating_temperature_night') }}° C

  - alias: house_mode_hvac_alarm_clock
    description: 'Ripristina la temperatura target di giorno prima della sveglia'
    trigger:
      # 1 ora prima dell'orario del prossimo allarme configurato sul telefono
      - platform: template
        # FIXME andrebbero usati oggetti datetime ecc. ma per colpa del c***o di fuso orario non sono riuscito a trovare un modo affidabile
        value_template: "{{ now() | as_timestamp - (state_attr('sensor.daniele_payton_next_alarm', 'Time in Milliseconds') / 1000) >= -3600 }}"
    condition:
      condition: state
      entity_id: input_select.house_mode
      state: "night"
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.hvac_heating_waiting_alarm_clock
      # salva la temperatura target attuale
      - service: input_number.set_value
        data:
          entity_id: input_number.hvac_heating_temperature_night
          value: "{{ state_attr('climate.boiler_main', 'temperature') }}"
      - service: climate.set_temperature
        data:
          entity_id: climate.boiler_main
          temperature: "{{ states('input_number.hvac_heating_temperature_day') }}"
      - service: notify.kontalk_daniele
        data:
          title: ''
          message: |-
            Riscaldamento pre-sveglia impostato a {{ state_attr('climate.boiler_main', 'temperature') }}° C
            Target notturno salvato a {{ states('input_number.hvac_heating_temperature_night') }}° C

climate:

  # Termostato principale
  - platform: generic_thermostat
    name: boiler_main
    precision: 0.5
    min_temp: 10
    max_temp: 30
    initial_hvac_mode: 'heat'
    heater: switch.boiler_home
    target_sensor: sensor.temperature_average
    min_cycle_duration:
      seconds: 30
    # cold_tolerance:
    #hot_tolerance:
    away_temp: 15

  # Condizionatore salone
  - platform: tasmota_irhvac
    name: living_ac
    command_topic: "homeassistant/tasmota/cmnd/living_ac/irhvac"
    state_topic: "homeassistant/tasmota/tele/living_ac/RESULT"
    temperature_sensor: sensor.temperature_living
    protocol: "GREE"
    hvac_model: "YAW1F"
    min_temp: 15
    max_temp: 30
    target_temp: 26
    initial_operation_mode: "off"
    #away_temp: 24
    precision: 1.0
    supported_modes:
      - heat
      - cool
      - dry
      - fan_only
      - auto
      - "off"
    supported_fan_speeds:
      #- low
      - max
      - medium
      # - high
      #- middle
      #- focus
      #- diffuse
      - min
      - auto
    supported_swing_list:
      - "off"
      - vertical #up to down
      # auto ?
